{"version":3,"sources":["components/Gallery/loader.svg","components/Gallery/Gallery.tsx","components/SearchForm/SearchForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Gallery","props","useState","error","gifs","loading","state","setState","useEffect","query","fetch","apiKey","then","response","json","catch","Error","result","data","message","map","item","title","url","images","preview_gif","original","e","className","getContent","src","loader","alt","length","i","style","backgroundImage","SearchForm","setQuery","onSubmit","preventDefault","value","onChange","target","type","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAAe,MAA0B,mC,eCkC1B,SAASA,EAAQC,GAA2B,IAAD,EAC9BC,mBAAS,CAAEC,MAAO,KAAMC,KAAM,GAAIC,SAAS,IADb,mBACjDC,EADiD,KAC1CC,EAD0C,KAYxD,OATAC,qBAAU,WA3BZ,IAAmBC,EA4BXR,EAAMQ,QACRF,EAAS,CAAEJ,MAAO,KAAMC,KAAM,GAAIC,SAAS,KA7B9BI,EA8BHR,EAAMQ,MA7BbC,MAAM,gDAAD,OACsCC,EADtC,cACkDF,EADlD,cAGTG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BC,OAAM,WACL,MAAM,IAAIC,MAAM,oBAEjBJ,MAAK,SAACK,GACL,IAAKA,EAAOC,KACV,MAAM,IAAIF,MAAMC,EAAOE,SAEzB,OAAOF,EAAOC,KAAKE,KACjB,SAACC,GAAD,MAGO,CACLC,MAAOD,EAAKC,MACZC,IAAKF,EAAKG,OAAOC,YAAYF,KAAOF,EAAKG,OAAOE,SAASH,YAa1DX,MAAK,SAACR,GAAD,OAAUG,EAAS,CAAEJ,MAAO,KAAMC,OAAMC,SAAS,OACtDU,OAAM,SAACY,GAAD,OAAOpB,EAAS,CAAEJ,MAAOwB,EAAER,QAASf,KAAM,GAAIC,SAAS,UAEjE,CAACJ,EAAMQ,QAEH,qBAAKmB,UAAU,UAAf,SAA0BC,EAAW5B,EAAMQ,MAAOH,KAG3D,SAASuB,EACPpB,EACAH,GAEA,OAAKG,EAGDH,EAAMH,MACF,UAAN,OAAiBG,EAAMH,OAErBG,EAAMD,QACD,qBAAKuB,UAAU,SAASE,IAAKC,EAAQC,IAAI,WAExB,IAAtB1B,EAAMF,KAAK6B,OACP,4BAAN,OAAmCxB,EAAnC,KAEKH,EAAMF,KAAKgB,KAAI,WAAiBc,GAAjB,IAAGZ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAV,OACpB,qBACEK,UAAU,eAEVO,MAAO,CAAEC,gBAAgB,OAAD,OAASb,EAAT,MAH1B,SAKE,qBAAKK,UAAU,QAAQE,IAAKP,EAAKS,IAAKV,EAAOA,MAAOA,KAH/CY,MAdA,mB,MCnDI,SAASG,EAAWpC,GAG/B,IAAD,EACyBC,mBAASD,EAAMQ,OADxC,mBACMA,EADN,KACa6B,EADb,KAED,OACE,uBACEV,UAAU,cACVW,SAAU,SAACZ,GACTA,EAAEa,iBACFvC,EAAMsC,SAAS9B,IAJnB,UAOE,uBACEmB,UAAU,aACVa,MAAOhC,EACPiC,SAAU,SAACf,GAAD,OAAOW,EAASX,EAAEgB,OAAOF,UAErC,uBAAOb,UAAU,cAAcgB,KAAK,SAASH,MAAM,c,MCJ1CI,MAZf,WAAgB,IAAD,EACa3C,mBAAS,IADtB,mBACNO,EADM,KACC6B,EADD,KAEb,OACE,qBAAKV,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CAAYnB,MAAOA,EAAO8B,SAAUD,IACpC,cAAC,EAAD,CAAS7B,MAAOA,UCGTqC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.efd90867.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader.5116872c.svg\";","import { useEffect, useState } from \"react\";\nimport apiKey from \"../../giphy_api_key.json\";\nimport loader from \"./loader.svg\";\nimport \"./Gallery.css\";\n\ninterface Gif {\n  title: string;\n  url: string;\n}\n\nfunction fetchGifs(query: string) {\n  return fetch(\n    `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${query}&limit=10`,\n  )\n    .then((response) => response.json())\n    .catch(() => {\n      throw new Error(\"Network error\");\n    })\n    .then((result) => {\n      if (!result.data) {\n        throw new Error(result.message);\n      }\n      return result.data.map(\n        (item: {\n          images: { original: { url: string }; preview_gif: { url: string } };\n          title: string;\n        }) => ({\n          title: item.title,\n          url: item.images.preview_gif.url || item.images.original.url,\n        }),\n      );\n    });\n}\n\nexport default function Gallery(props: { query: string }) {\n  const [state, setState] = useState({ error: null, gifs: [], loading: false });\n\n  useEffect(() => {\n    if (props.query) {\n      setState({ error: null, gifs: [], loading: true });\n      fetchGifs(props.query)\n        .then((gifs) => setState({ error: null, gifs, loading: false }))\n        .catch((e) => setState({ error: e.message, gifs: [], loading: false }));\n    }\n  }, [props.query]);\n\n  return <div className=\"gallery\">{getContent(props.query, state)}</div>;\n}\n\nfunction getContent(\n  query: string,\n  state: { error: string | null; gifs: Gif[]; loading: boolean },\n) {\n  if (!query) {\n    return \"Type something ^\";\n  }\n  if (state.error) {\n    return `Error: ${state.error}`;\n  }\n  if (state.loading) {\n    return <img className=\"loader\" src={loader} alt=\"Loader\" />;\n  }\n  if (state.gifs.length === 0) {\n    return `No gifs found for query \"${query}\"`;\n  }\n  return state.gifs.map(({ title, url }, i) => (\n    <div\n      className=\"gallery-item\"\n      key={i}\n      style={{ backgroundImage: `url(${url})` }}\n    >\n      <img className=\"image\" src={url} alt={title} title={title} />\n    </div>\n  ));\n}\n","import { useState } from \"react\";\nimport \"./SearchForm.css\";\n\nexport default function SearchForm(props: {\n  query: string;\n  onSubmit: (query: string) => void;\n}) {\n  const [query, setQuery] = useState(props.query);\n  return (\n    <form\n      className=\"search-form\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        props.onSubmit(query);\n      }}\n    >\n      <input\n        className=\"form-input\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      <input className=\"form-submit\" type=\"submit\" value=\"Search\" />\n    </form>\n  );\n}\n","import { useState } from \"react\";\nimport Gallery from \"./components/Gallery/Gallery\";\nimport SearchForm from \"./components/SearchForm/SearchForm\";\nimport \"./App.css\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SearchForm query={query} onSubmit={setQuery} />\n        <Gallery query={query} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}